swagger: "2.0"
info:
  description: "API for time and date functions"
  version: "1"
  title: "digidatesAPI"
  contact:
    email: "webmaster@digidates.de"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.digidates.de"
basePath: "/api/v1"
schemes:
- "https"
paths:
  /unixtime:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "timestamp"
        description: "Timestamp to convert"
        required: false
        schema:
          type: string
          example: "1970-01-01 00:00:01"
      responses:
        "200":
          description: Unixtime of given Timestamp
          schema:
            type: object
            properties:
              time:
                type: integer
                description: Unixtime as integer
  /week:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "timestamp"
        description: "Time to get week of"
        required: false
        schema:
          type: string
          example: "1970-01-01 00:00:01"
      responses:
        "200":
          description: "Number of Week of given Time"
          schema:
            type: object
            properties:
              week:
                type: integer
                description: "Number of Week"
  /leapyear:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "timestamp"
          description: "Time to check if in leap year or not"
          required: false
          schema:
            type: string
            example: "1970-01-01 00:00:01"
      responses:
        "200":
          description: "Info if leap year or not"
          schema:
            type: object
            properties:
              leapyear:
                type: boolean
                description: "Leap year or not"

  /checkdate:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: date
          description: "Date to check if valid"
          required: true
          schema:
            type: string
            example: "2020-01-01"
      responses:
        "200":
          description: "Info if valid date or not"
          schema:
            type: object
            properties:
              checkdate:
                type: boolean
                description: "Valid date or not"

  /weekday:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: date
          description: "Date of which to get week day"
          required: false
          schema:
            type: integer
            example: "2020-01-01"
      responses:
        "200":
          description: "Number of week day"
          schema:
            type: object
            properties:
              weekday:
                type: integer
                description: "Number of week day"
